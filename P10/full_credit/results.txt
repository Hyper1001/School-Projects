QUESTION 1: Which value of slices did you select for your machine to solve the polynomial with 1 thread with at least a 30 second runtime: 
	100000000

QUESTION 2: Provide the output of ``time polyb nn`` (or the improved version in the lecture video, if you prefer) for the following values of nn threads shown below:

Example Timing:

real	0m22.551s
user	0m22.524s
sys	0m0.012s


YOUR Timing:

Without threads:

Coudn't run due to errors


With 2 threads:


Coudn't run due to errors




With 4 threads:


Coudn't run due to errors




With 6 threads:


Coudn't run due to errors




With 8 threads:

Coudn't run due to errors





With 12 threads:


Coudn't run due to errors




With 24 threads:

Coudn't run due to errors




QUESTION 3: Does adding more threads continue to speed up the program? Do more threads ever slow down the program slightly?  Why or why not?

More threads will decrease the runtime of a program up until a certain point, where there will be minimal gains in speed.
More threads won't slow the speed of the program.




QUESTION 4: Does adding more threads increase the "system load", or is it constant regardless of the number of threads?  Why?
It will increase the system load up until the maximum number of cores has been reached.
